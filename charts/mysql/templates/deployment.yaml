apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
      {{- if .Values.persistence.enabled }}
        - name: init-storage
          image: busybox:latest
          command: ["sh", "-c", "chown -R 999:999 /var/lib/mysql && chmod -R 777 /var/lib/mysql"]
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      {{- end }}
      containers:
        - name: mysql
          image: {{ .Values.mysql.image }}
          ports:
            - containerPort: {{ .Values.mysql.port }}
              name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.database }}
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: config
              mountPath: /etc/mysql/my.cnf
              subPath: my.cnf
          livenessProbe:
            exec:
              command:
                - mysqladmin
                - -u
                - root
                - -p$(MYSQL_ROOT_PASSWORD)
                - ping
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - mysql
                - -u
                - root
                - -p$(MYSQL_ROOT_PASSWORD)
                - -e
                - "SELECT 1"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          resources: {{ .Values.resources.mysql | toYaml | nindent 12 }}
      {{- if .Values.exporter.enabled }}
        - name: mysql-exporter
          image: {{ .Values.exporter.image }}
          ports:
            - containerPort: {{ .Values.exporter.port }}
              name: exporter
          env:
            - name: DATA_SOURCE_NAME
              value: "root:$(MYSQL_ROOT_PASSWORD)@tcp(localhost:{{ .Values.mysql.port }})/{{ .Values.mysql.database }}"
            - name: MYSQLD_EXPORTER_LOG_LEVEL
              value: debug
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: mysql-root-password
          livenessProbe:
            httpGet:
              path: /metrics
              port: {{ .Values.exporter.port }}
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /metrics
              port: {{ .Values.exporter.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
          resources: {{ .Values.resources.exporter | toYaml | nindent 12 }}
      {{- end }}
      volumes:
      {{- if .Values.persistence.enabled }}
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql
      {{- else }}
        - name: mysql-data
          emptyDir: {}
      {{- end }}
        - name: config
          configMap:
            name: mysql