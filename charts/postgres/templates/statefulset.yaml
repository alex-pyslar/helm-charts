apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgres.fullname" . }}
  {{- if .Values.vault.enabled }}
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "db-role"
    vault.hashicorp.com/secret-volume-path: "/secrets"
    vault.hashicorp.com/secret-name: "secret/postgres"
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "postgres.fullname" . }}
  selector:
    matchLabels:
      app: {{ include "postgres.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "postgres.fullname" . }}
    spec:
      containers:
      - name: postgres
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        ports:
        - containerPort: 5432
        env:
        {{- if not .Values.vault.enabled }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "postgres.fullname" . }}-secret
              key: password
        {{- end }}
        - name: POSTGRES_USER
          value: {{ .Values.postgres.username }}
        - name: POSTGRES_DB
          value: {{ .Values.postgres.database }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        resources: {{ toYaml .Values.resources | nindent 12 }}
        livenessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "{{ .Values.postgres.username }}"]
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: local-path  # Явно указываем local-path
      resources:
        requests:
          storage: {{ .Values.persistence.size }}