apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab
  template:
    metadata:
      labels:
        app: gitlab
    spec:
      nodeSelector:
        kubernetes.io/hostname: k8s-main
      containers:
        - name: gitlab
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 80
          env:
            - name: GITLAB_OMNIBUS_CONFIG
              value: |
                external_url 'http://{{ .Values.global.hosts.nodeIp }}:{{ .Values.service.nodePort }}'
                postgresql['enable'] = false
                gitlab_rails['db_adapter'] = 'postgresql'
                gitlab_rails['db_host'] = '{{ .Values.psql.host }}'
                gitlab_rails['db_port'] = {{ .Values.psql.port }}
                gitlab_rails['db_database'] = '{{ .Values.psql.database }}'
                gitlab_rails['db_username'] = '{{ .Values.psql.username }}'
                gitlab_rails['db_password'] = '{{ .Values.psql.password }}'
                redis['enable'] = false
                gitlab_rails['redis_host'] = '{{ .Values.redis.host }}'
                gitlab_rails['redis_port'] = {{ .Values.redis.port }}
                gitlab_rails['redis_password'] = '{{ .Values.redis.password }}'
                gitlab_rails['lfs_enabled'] = true
                gitlab_rails['lfs_object_store_enabled'] = true
                gitlab_rails['lfs_object_store_connection'] = {
                  'provider' => 'AWS',
                  'endpoint' => 'http://{{ .Values.minio.host }}:{{ .Values.minio.port }}',
                  'aws_access_key_id' => '{{ .Values.minio.accessKey }}',
                  'aws_secret_access_key' => '{{ .Values.minio.secretKey }}',
                  'path_style' => true
                }
                gitlab_rails['artifacts_object_store_enabled'] = true
                gitlab_rails['artifacts_object_store_connection'] = {
                  'provider' => 'AWS',
                  'endpoint' => 'http://{{ .Values.minio.host }}:{{ .Values.minio.port }}',
                  'aws_access_key_id' => '{{ .Values.minio.accessKey }}',
                  'aws_secret_access_key' => '{{ .Values.minio.secretKey }}',
                  'path_style' => true
                }
                gitlab_rails['initial_root_password'] = '{{ .Values.initialRootPassword }}'
          resources: {{ toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: gitlab-data
              mountPath: /var/opt/gitlab
      volumes:
        - name: gitlab-data
          persistentVolumeClaim:
            claimName: gitlab