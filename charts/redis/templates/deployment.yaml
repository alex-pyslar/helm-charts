apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: {{ .Values.redis.image }}
          ports:
            - containerPort: {{ .Values.redis.port }}
              name: redis
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-password
          args:
            - --requirepass
            - $(REDIS_PASSWORD)
            - --appendonly
            - "yes"
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: config
              mountPath: /usr/local/etc/redis/redis.conf
              subPath: redis.conf
          livenessProbe:
            exec:
              command:
                - redis-cli
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: {{ .Values.redis.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          resources: {{ .Values.resources.redis | toYaml | nindent 12 }}
      {{- if .Values.exporter.enabled }}
        - name: redis-exporter
          image: {{ .Values.exporter.image }}
          ports:
            - containerPort: {{ .Values.exporter.port }}
              name: exporter
          env:
            - name: REDIS_ADDR
              value: "redis://localhost:{{ .Values.redis.port }}"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-password
            - name: REDIS_EXPORTER_LOG_LEVEL
              value: debug
          readinessProbe:
            httpGet:
              path: /metrics
              port: {{ .Values.exporter.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          resources: {{ .Values.resources.exporter | toYaml | nindent 12 }}
      {{- end }}
      volumes:
      {{- if .Values.persistence.enabled }}
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis
      {{- else }}
        - name: redis-data
          emptyDir: {}
      {{- end }}
        - name: config
          configMap:
            name: redis