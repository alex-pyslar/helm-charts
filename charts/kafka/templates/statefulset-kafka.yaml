containers:
- name: kafka
  image: {{ .Values.kafka.image }}
  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1000m"
      memory: "2Gi"
  ports:
  - containerPort: {{ .Values.kafka.port }}
    name: kafka
  readinessProbe:
    tcpSocket:
      port: {{ .Values.kafka.port }}
    initialDelaySeconds: 10
    periodSeconds: 5
    failureThreshold: 6
  env:
  - name: KAFKA_ZOOKEEPER_CONNECT
    value: {{ .Values.kafka.zookeeperConnect }}
  - name: KAFKA_ADVERTISED_LISTENERS
    value: "PLAINTEXT://{{ .Release.Name }}-kafka:{{ .Values.kafka.port }}"
  - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
    value: "PLAINTEXT:PLAINTEXT"
  - name: KAFKA_INTER_BROKER_LISTENER_NAME
    value: "PLAINTEXT"
  - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
    value: "1"
  - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
    value: "1"
  - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
    value: "1"
  - name: KAFKA_CFG_SERVER_PROPERTIES
    value: /etc/kafka/server.properties
  volumeMounts:
  - name: kafka-data
    mountPath: /var/lib/kafka/data
  - name: kafka-config
    mountPath: /etc/kafka
volumes:
- name: kafka-config
  configMap:
    name: {{ .Release.Name }}-kafka-config
    items:
    - key: kafka-server-properties
      path: server.properties